name: build

on:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Set tag env
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}
      # - name: Docker Buildx (build)
      #   run: |
      #     docker buildx build \
      #       --cache-from "type=local,src=/tmp/.buildx-cache" \
      #       --cache-to "type=local,dest=/tmp/.buildx-cache" \
      #       --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 \
      #       --output "type=image,push=false" \
      #       --tag cgeosoft/landing:latest \
      #       --file ./Dockerfile ./
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Buildx (push)
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 \
            --output "type=image,push=true" \
            --tag cgeosoft/landing:latest \
            --tag cgeosoft/landing:${{ env.RELEASE_VERSION }} \
            --file ./Dockerfile ./
      - name: Inspect image
        run: |
          docker buildx imagetools inspect cgeosoft/landing:latest
